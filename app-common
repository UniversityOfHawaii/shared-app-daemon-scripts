#! /bin/bash
# app - run systemctl on the app, while following $APP_LOG.
#      2022-06-20 jbeutel@hawaii.edu; for RHEL7 systemd
#      2022-08-02 jbeutel@hawaii.edu; renamed to app-common and made backwards compatible
#      2022-09-20 jbeutel@hawaii.edu; hide tail stderr
#
# $Id$
#---------------------------------------------------------------------
# Spec:
#   1. Run as the daemon user
#   2. Returns
#        0 if successfully starts or checks that Tomcat is running
#        non-0 if Tomcat not running (NB: successful stop returns non-0, like for SysV init)
#---------------------------------------------------------------------
# Install:
#   1. Install as app-common in /usr/local/bin/appDaemon.
#   2. Symlink from /usr/local/bin/appDaemon/app-common to app in APP_USER's home dir.
#   3. sudoers allows APP_USER to "/bin/systemctl {start|stop|status} tomcat_${APP_USER}"

# You shouldn't need to change variable settings in this script;
# you can override all variables like FOO=${FOO:-default} in the app.parameters file.

set -u # treat expansion of unset variables (without a default) as an error

# include parameters from same dir as this script
PARAM_FILE=$(dirname $0)/app.parameters
if [ ! -f $PARAM_FILE ]; then
  echo "$PARAM_FILE not found" 1>&2
  exit 5
fi
. $PARAM_FILE

# make sure we got the required parameter
APP_USER=${APP_USER:?}

# defaults
APP_HOME=${APP_HOME:-/home/${APP_USER}} # on Linux
CATALINA_BASE=${CATALINA_BASE:-${APP_HOME}/tomcat}
LOG_DIR=${LOG_DIR:-${CATALINA_BASE}/logs}

APP_LOG=${LOG_DIR}/app-err.log

usage() {
  echo "Usage: $0 { start | stop | check | status }" 1>&2
  exit 1
}

follow() {
  echo "Following $APP_LOG..."
  # 2>/dev/null to hide messages like the following, which are expected, but look like errors:
  # tail: cannot open ‘/home/tapsdevd/tomcat/logs/app-err.log’ for reading: No such file or directory
  # tail: ‘/home/tapsdevd/tomcat/logs/app-err.log’ has appeared;  following end of new file
  # tail: ‘/home/tapsdevd/tomcat/logs/app-err.log’ has become inaccessible: No such file or directory
  tail -n 0 -F --pid=$$ $APP_LOG 2>/dev/null &
}

sapp() {
  sudo /bin/systemctl $1 tomcat_${APP_USER}
}

if [ $# -ne 1 ]; then
  usage
fi
case "$1" in
'start')
  follow && sapp start
  ;;
'stop')
  follow && ! { sapp stop || ! sapp status; }
  ;;
'check' | 'status')
  sapp status
  ;;
*)
  usage
  ;;
esac
# eof: app
