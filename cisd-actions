#!/bin/bash

# Script to limit and secure automated deployments from Jenkins.
# Use in /home/tapsd/.ssh/authorized_keys like this (on one line):
#     from="cis02.pvt.hawaii.edu,cis70.pvt.hawaii.edu",
#     command="/home/tapsd/cisd-actions $SSH_ORIGINAL_COMMAND",
#     no-port-forwarding,
#     no-X11-forwarding,
#     no-agent-forwarding,
#     no-pty ssh-rsa AAAAB3....o9M9qz4xqGCqGXoJw= cisd@cis02
#
# $Id$
#
# jbeutel 2014-04-04
# jbeutel 2022-07-27 update for RHEL7

# You shouldn't need to change variable settings in this script;
# you can override all variables like FOO=${FOO:-default} in the app.parameters file.

# include parameters from same dir as this script
BASE=`dirname $0`
PARAM_FILE=$BASE/app.parameters
if [ ! -f $PARAM_FILE ] ; then
  echo "$PARAM_FILE not found" 1>&2
  exit 1
fi
. $PARAM_FILE

# make sure we got the required parameters
CTX_NAME=${CTX_NAME:?}

SAFE_DIR="wars-from-cisd"
LOG="cisd-actions.log"

# parameter: path to a file within $SAFE_DIR
validatePath() {
    # prevent cisd from altering files in .ssh or elsewhere
    echo "$1" | fgrep '..' > /dev/null && (echo "Bad path: $1" | tee -a $LOG) && exit 1
    [[ "$1" =~ ^$SAFE_DIR/[a-zA-Z0-9].* ]] || ((echo "Bad path: $1" | tee -a $LOG) && exit 1)
}

preservePrevious() {
    TARGET="$1"
    if [ -e "$TARGET" ] ; then
        DT=$(date '+%y%m%d-%H%M' -r "$TARGET")
        mv "$TARGET" "$TARGET-$DT"
    fi
}

copy() {
    # The undocumented scp option -t is run by scp on the
    # server side to send a file "to" the server.  See
    # https://blogs.oracle.com/janp/entry/how_the_scp_protocol_works
    [ "$1" != "-t" ] && echo "Bad scp option: $*" && exit 1
    shift
    TARGET="$1"
    validatePath "$TARGET"
    preservePrevious "$TARGET"
    if [ ! -d $SAFE_DIR ] ; then
        (echo "server is missing target dir $SAFE_DIR" | tee -a $LOG) && exit 1
    fi
    scp -t "$TARGET"
}

# parameter: path to war file within wars-from-cisd/
soft-link() {
    TARGET="$1"
    validatePath "$TARGET"
    [ ! -e "$TARGET" ] && echo "No such file: $TARGET" && exit 1
    ln -sf "$TARGET" $CTX_NAME.war
    ls -ltr $SAFE_DIR
}

start() {
    $BASE/sapp start
}

stop() {
    ! status && echo "not running, so no need to stop" && return 0
    /usr/local/sbin/zm 15     # 15-minute Zabbix maintenance
    echo "Sleeping 20 seconds to let Zabbix recognize maintenance..."
    sleep 20
    $BASE/sapp stop    # success if app has stopped
}

status() {
    $BASE/sapp status
}

dbdump() {
    ssh cisd@web12.pvt.hawaii.edu "sudo /usr/local/sbin/dbdump dump $1"
}

deploy() {
    $BASE/prep && stop && dbdump "$1" && $BASE/deploy && start
}

echo "$(date) $*" >> $LOG
case "$1" in
'scp')
    shift
    copy "$@"
    ;;
'soft-link')
    soft-link "$2"
    ;;
'start')
    start
    ;;
'stop')
    stop
    ;;
'check'|'status')
    status
    ;;
'deploy')
    deploy "$2"
    ;;
'echo')
    echo "$0 echoing $*"
    ;;
*)
    echo "Forbidden command: $*" | tee -a $LOG
    exit 1
    ;;
esac
